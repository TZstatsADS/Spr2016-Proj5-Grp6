str(data12)
data12 = ex1217[,coef]
data12 = mutate(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
str(data12)
?mutate
data12 = mutate_(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
data12 = ex1217[,coef]
data12 = mutate_(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
fit11 = regsubsets(Mortality~.,data=ex1217[,2:14],nvmax=13,nbest=1)
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
plot(BIC)
k = which.min(cp)
coef = names(coef(fit11,k)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
data12 = mutate(data12,lHC = log(HC),lNOX = log(NOX), lSO2 = log(SO2))
str(data12)
fit11 = regsubsets(Mortality~.,data=ex1217[,2:14],nvmax=13,nbest=1)
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
plot(BIC)
k = which.min(cp)
coef = names(coef(fit11,k)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
data12 = mutate(data12,HC = log(HC),NOX = log(NOX), SO2 = log(SO2))
fit12 = lm(Mortality~.,data12)
anova(fit11,fit12)
?regsubsets
fit11 = regsubsets(Mortality~.,data=ex1217[,2:14],nvmax=13,nbest=1,method = "forward")
cp = summary(fit11)$cp
BIC = summary(fit11)$bic
plot(cp)
plot(BIC)
k = which.min(cp)
coef = names(coef(fit11,k)[-1])
coef = c("Mortality",coef)
data11 = ex1217[,coef]
fit11 = lm(Mortality~.,data11)
coef = c(coef,"HC","NOX","SO2")
data12 = ex1217[,coef]
data12 = mutate(data12,HC = log(HC),NOX = log(NOX), SO2 = log(SO2))
fit12 = lm(Mortality~.,data12)
anova(fit11,fit12)
str(ex1220)
fit21 = regsubsets(Total~.,data=ex1220[,-1],nvmax=7,nbest=1,force.in = Area)
fit21 = regsubsets(Total~.,data=ex1220[,-1],nvmax=7,nbest=1,force.in = "Area")
which.min(summary(fit21)$cp)
data(ex1220)
fit21 = regsubsets(Total~.,data=ex1220[,-1],nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
k
str(ex1220)
data(ex1220)
fit21 = regsubsets(Total~.,data=ex1220[,c(-1,-3)],nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
data(ex1220)
fit21 = regsubsets(Total~.,data=ex1220[,c(-1,-3)],nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
coef = c("Total",coef)
data21 = ex1217[,coef]
fit11 = lm(Total~.,data21)
data21 = ex1220[,coef]
fit11 = lm(Total~.,data21)
coef
str(ex1220)
data = select(ex1220,-Island,-Native)
str(data)
fit21 = regsubsets(Total~.,data,nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
coef
data = select(ex1220,-Island,-Total)
fit21 = regsubsets(Native~.,data=ex1220[,c(-1,-3)],nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
data = select(ex1220,-Island,-Total)
str(data)
fit21 = regsubsets(Native~.,data=ex1220[,c(-1,-3)],nvmax=7,nbest=1,force.in = "Area")
data = select(ex1220,-Island,-Total)
fit21 = regsubsets(Native~.,data,nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
coef
data = ex1220 %>%
mutate(Native = Total-Native)%>%
select(-Island,-Total)
fit21 = regsubsets(Native~.,data,nvmax=7,nbest=1,force.in = "Area")
k = which.min(summary(fit21)$cp)
coef = names(coef(fit21,k)[-1])
coef
data(ex2011)
str(ex2011)
data(ex2011)
logit3 <- glm(Failure ~ Temperature, ex2011,family = "binomial")
logit3
summary(logit3)
?wald.test
??wald.test
install.packages("aod")
library("aod")
coef(logit3)
wald.test(b = coef(logit), Sigma = vcov(logit), Terms = 2)
data(ex2011)
logit <- glm(Failure ~ Temperature, ex2011,family = "binomial")
summary(logit)
library("aod")
wald.test(b = coef(logit), Sigma = vcov(logit), Terms = 2)
?wald.test
str(ex2011)
data(ex2011)
logit <- glm(Failure ~ Temperature, ex2011,family = "binomial")
summary(logit)
pnorm(-2.053)
anova(logit)
anova(logit,test="F")
?"anova.glm"
anova(logit,test="LRT")
summary(logit)
confint.default(logit)
prob = predict.glm(logit, data.frame(Temperature = 31), type="response")
prob
prob1 = predict.glm(logit)
prob1
prob = predict.glm(logit, data.frame(Temperature = 31), type="response")
problogit = predict.glm(logit, data.frame(Temperature = 31))
problogit
data(ex2015)
str(ex2015)
?t.test
Site
attach(ex2015)
Site
attach(ex2015)
for(i in 1:7){
print("for ring", k)
t.test(ex2015[1:30,i+1],ex2015[31:60,i+1])
}
attach(ex2015)
for(i in 1:7){
print("for ring", k)
print(t.test(ex2015[1:30,i+1],ex2015[31:60,i+1]))
}
i = 1
play = t.test(ex2015[1:30,i+1],ex2015[31:60,i+1])
play$p.value
attach(ex2015)
for(i in 1:7){
print("for ring", as.character(k),"the p value is")
print(t.test(ex2015[1:30,i+1],ex2015[31:60,i+1],alternative="less")$p.value)
}
attach(ex2015)
p = vector()
for(i in 1:7){
p = c(p,t.test(ex2015[1:30,i+1],ex2015[31:60,i+1],alternative="less")$p.value)
}
p
str(eex2015)
str(ex2015)
logit = lgm(Site~.,ex2015,family = "binomial")
logit = glm(Site~.,ex2015,family = "binomial")
logit
summary(logit)
Y = c(0,0,1,1)
X = c(-2,-1,1,2)
logit = glm(Y ~ X -1, family = "binomial")
Y = factor(c(0,0,1,1))
X = c(-2,-1,1,2)
logit = glm(Y ~ X -1, family = "binomial")
logit
predict.glm(logit,data.frame(X=0.5))
predict.glm(logit,data.frame(X=0.5),type = "response")
predict.glm(logit,data.frame(X=0.5),type = "response")
beta = -50:50
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
?Logit
??logit
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
beta = -50:50
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
beta = -30:30
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
beta = -25:25
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
beta = 1:25
logL = log(1-logit(-2*beta))+log(1-logit(-1*beta))+log(logit(1*beta))+log(logit(2*beta))
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
Y = factor(c(0,0,1,1))
X = c(-2,-1,1,2)
logit = glm(Y ~ X - 1, family = "binomial")
## The maximuk likelihood of beta1 is 23.14.
## No, the estimate does not make sense.
predict.glm(logit,data.frame(X=0.5),type = "response")
## The estimate is 0.9999906.
beta = 1:25
p = function(x){
return(exp(x)/(1+exp(x)))
}
logL = log(1-p(-2*beta))+log(1-p(-1*beta))+log(p(1*beta))+log((2*beta))
plot(beta,logL)
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
Y = factor(c(0,0,1,1))
X = c(-2,-1,1,2)
logit = glm(Y ~ X - 1, family = "binomial")
## The maximuk likelihood of beta1 is 23.14.
## No, the estimate does not make sense.
predict.glm(logit,data.frame(X=0.5),type = "response")
## The estimate is 0.9999906.
beta = 1:30
p = function(x){
return(exp(x)/(1+exp(x)))
}
logL = log(1-p(-2*beta))+log(1-p(-1*beta))+log(p(1*beta))+log((2*beta))
pack = c("Sleuth3", "dplyr", "ggplot2", "car")
lapply(pack, library, character.only = TRUE)
Y = factor(c(0,0,1,1))
X = c(-2,-1,1,2)
logit = glm(Y ~ X - 1, family = "binomial")
## The maximuk likelihood of beta1 is 23.14.
## No, the estimate does not make sense.
predict.glm(logit,data.frame(X=0.5),type = "response")
## The estimate is 0.9999906.
beta = 1:30
p = function(x){
return(exp(x)/(1+exp(x)))
}
logL = log(1-p(-2*beta))+log(1-p(-1*beta))+log(p(1*beta))+log((2*beta))
plot(beta,logL)
library("Sleuth3")
attach(ex2012)
str(ex2012)
library("ggplot2")
ggplot(ex2012, aes(x=log(CK), y=H, shape=Group)) + geom_point()
?glm
myLogit = glm(Group ~ CK + I(CK^2), data = ex2012, family = "binomial")
summary(myLogit1)
myLogit1 = glm(Group ~ CK + I(CK^2), data = ex2012, family = "binomial")
summary(myLogit1)
myLogit2 = glm(Group ~ log(CK) = I(log(CK)^2))
myLogit2 = glm(Group ~ log(CK) + I(log(CK)^2), family = "binomial")
summary(myLogit2)
myLogit3 = glm(Group ~ log(CK) + H)
myLogit3 = glm(Group ~ log(CK) + H, family = "binomial")
anova.glm(myLogit3)
anova(myLogit3)
myLogit4 = glm(Group ~ 1, family = "binomial")
anova(myLogit3, myLogit4)
predict(myLogit3, data.frame(CK = 80, H = 85))
predict(myLogit3, data.frame(CK = 300, H = 100))
myLogit2 = glm(Group ~ log(CK) + I(log(CK)^2), family = "binomial")
summary(myLogit2)
myLogit3 = glm(Group ~ log(CK) + H, family = "binomial")
summary(myLogit3)
summary(myLogit2)
inv = exp(p1)/(1+exp(p1))
p1 = predict(myLogit3, data.frame(CK = 80, H = 85))
inv = exp(p1)/(1+exp(p1))
inv1 = exp(p1)/(1+exp(p1))
inv1
inv2 = exp(p2)/(1+exp(p2))
p2 = predict(myLogit3, data.frame(CK = 300, H = 100))
inv2 = exp(p2)/(1+exp(p2))
inv2
inv1/inv2
str(ex2012)
Group
inv1 = exp(-p1)/(1+exp(-p1))
inv2 = exp(-p2)/(1+exp(-p2))
inv2/inv1
p1 = predict(myLogit3, data.frame(CK = 80, H = 85))
p2 = predict(myLogit3, data.frame(CK = 300, H = 100))
inv1 = exp(-p1)/(1+exp(-p1))
inv2 = exp(-p2)/(1+exp(-p2))
inv2/inv1
p1 = predict(myLogit3, data.frame(CK = 80, H = 85))
p2 = predict(myLogit3, data.frame(CK = 300, H = 100))
inv1 = exp(p1)/(1+exp(p1))
inv2 = exp(p2)/(1+exp(p2))
inv2/inv1
p1 = predict(myLogit3, data.frame(CK = 80, H = 85))
p2 = predict(myLogit3, data.frame(CK = 300, H = 100))
inv1 = exp(p1)/(1+exp(p1))
inv2 = exp(p2)/(1+exp(p2))
inv1/inv2
anova(myLogit3, myLogit4)
summary(myLogit2)
detach(ex2012)
attach(ex2116)
str(ex2116)
odd = Tumor/Total
fit = lm(odd ~ Dose)
summary(fit)
fitN = lm(odd~1)
anova(fit,fitN)
fit3 = lm(Dose ~ odd)
predict(fit3, data.frame(odd=0.5))
oddL = exp(odd)/(1+exp(odd))
fit = lm(oddL ~ Dose)
summary(fit)
plot(fit$residuals)
fit2 = lm(oddL ~ log(Dose)+log(Dose)^2)
fit2
anova(myLogit3, myLogit4)
fitN = lm(oddL~1)
anova(fit,fitN)
predict(fit2, data.frame(oddL = exp(0.5)/(1+exp(0.5))))
fitNew = lm(Dose ~ odd)
predict(fitNes, data.frame(odd=0.5))
predict(fitNew, data.frame(odd=0.5))
200*40000*0.1
200*40000*0.1-700000
rm(list = ls())
?Random
rbinom(10,0.1)
rbinom(10,10,0.1)
rbinom(10,1,0.1)
generate = function(p, n){
B = rbinom(n,1,p)
N1 = rnorm(0,1)
N2 = rnorm(0,5)
Y = B*N1 + (1-B)*N2
}
generate(0.99,3)
generate = function(p, n){
B = rbinom(n,1,p)
N1 = rnorm(0,1)
N2 = rnorm(0,5)
Y = B*N1 + (1-B)*N2
return(Y)
}
generate(0.99,3)
?rnorm
generate = function(p, n){
B = rbinom(n,1,p)
N1 = rnorm(n,0,1)
N2 = rnorm(n,0,5)
Y = B*N1 + (1-B)*N2
return(Y)
}
generate(0.99,3)
?sd
library(boot)
?boot
generate(0.99,10)
Y = generate(0.99,10)
boot(Y,mean)
boot(Y,mean,10)
boot(Y,mean,5)
?sample
play = list(a=1,b=2)
list[a]
list
play = data.frame(a=12,b=15)
play
play[a]
play["a"]
intToUtf8(97)
rawToChar(98)
rawToChar("a")
rawToChar(a)
?rawToChar
carToRaw("a")
charToRaw("a")
rowToChar("4")
rawToChar("98")
rawToChar(98)
rawToChar(61)
rawToUft8(97)
intToUtf8(97)
as.numeric(charToRaw("Acf"))
as.numeric(charToRaw("Acf "))
?split
play = "how are you"
split(play, f=" ")
toWord = function(string){
cVector = string %>%
tolower() %>%
removePunctuation() %>%
strsplit(split=" ") %>%
#gsub(pattern="'",replacement="") %>%
unlist()
return(cVector)
}
toWord(play)
library("dplyr")
toWord(play)
??removePunctuation
library("tm")
toWord(play)
enc = function(string, k){
words = toWord(string)
ascii = lapply(words,as.numeric(charToRaw()))
return(ascii)
}
enc("What the Fuck??")
enc = function(string, k){
words = toWord(string)
ascii = lapply(words,as.numeric(charToRaw(words)))
return(ascii)
}
enc("What the Fuck??")
enc = function(string, k){
words = toWord(string)
ascii = lapply(words,charToRaw(words))
return(ascii)
}
enc("What the Fuck??")
enc = function(string, k){
words = toWord(string)
ascii = lapply(words,charToRaw)
return(ascii)
}
enc("What the Fuck??")
enc = function(string, k){
words = toWord(string)
ascii = lapply(words,as.numeric(charToRaw))
return(ascii)
}
enc = function(string, k){
words = toWord(string)
ascii = lapply(words,charToRaw)
ascii = lapply(ascii,as.numeric)
return(ascii)
}
enc("What the fuck??")
enc("What the fuck??")+4
enc("What the fuck??")[[1]]+4
enc = function(string, k){
words = toWord(string)
ascii = lapply(words,charToRaw) %>%
lapply(as.numeric) %>%
lapply(`-`,97) %>%
lapply(`+`,k)
return(ascii)
}
enc("What the fuck??")
enc("What the fuck??",4)
charToRaw(z)
charToRaw("z")
as.numeric(charToRaw("z"))
122-97
toSentence = function(list){
ascii = lapply(list, `+`, 97) %>%
lapply(intToUtf8) %>%
lapply(paste, sep = "")
S = paste(ascii, collapse = " ")
return(S)
}
enc = function(string, k){
num = toNumber(string)
encN = lapply(num,`+`,k) %>%
lapply(`%%`,26)
encS = toSentence(encN)
return(encS)
}
enc("How are you", 7)
toNumber = function(string){
words = stringToWord(string)
num = lapply(words,charToRaw) %>%
lapply(as.numeric) %>%
lapply(`-`,97)
return(num)
}
enc = function(string, k){
num = toNumber(string)
encN = lapply(num,`+`,k) %>%
lapply(`%%`,26)
encS = toSentence(encN)
return(encS)
}
enc("How are you", 7)
toWord = function(string){
cVector = string %>%
tolower() %>%
removePunctuation() %>%
strsplit(split=" ") %>%
#gsub(pattern="'",replacement="") %>%
unlist()
return(cVector)
}
enc("How are you", 7)
stringToWord = function(string){
cVector = string %>%
tolower() %>%
removePunctuation() %>%
strsplit(split=" ") %>%
#gsub(pattern="'",replacement="") %>%
unlist()
return(cVector)
}
enc("How are you", 7)
setwd("/Users/yutou/Data Science/finalproject-p5-team6/data")
source("../lib/enc.R")
library("dplyr")
library("tm")
enc(input)
input = "Vote for group six"
enc(input)
enc(input,9)
